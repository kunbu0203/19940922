{"version":3,"sources":["assets/js/pixi-game-nojson.js"],"names":["targetNum","Math","floor","random","$","text","targetScore","length","currentScore","second","timer","isStart","endTimer","clearInterval","app","PIXI","Application","init","backgroundAlpha","resizeTo","document","querySelector","resolution","window","devicePixelRatio","autoDensity","antialias","appendChild","view","createItem","_ref","x","y","width","height","imgName","hitArea","name","split","container","Container","stage","addChild","offsetX","offsetY","itemTexture","Assets","load","mapNum","item","Sprite","anchor","set","eventMode","cursor","undefined","points","map","val","i","Polygon","on","score","find","addTl","play","addClass","setTimeout","itemTl","originalTexture","original","alpha","gsap","timeline","pause","addTexture","add","to","duration","delay","scale","ease","createLeaf","_ref2","leafTexture","leaf","leafTl","rotation","PI","data","items","redBean","mulberryLeaf","jobsTears","redDate","blackBean","coffee","Object","entries","forEach","_ref3","key","value","randomIndex","sort","slice","stageResize","canvasW","offsetWidth","addEventListener","setInterval"],"mappings":"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","file":"pixi-game-nojson.min.js","sourcesContent":["(async function () {\n    // 取得隨機目標數量(1-2個)\n    const targetNum = Math.floor(Math.random() * 2) + 1;\n    // const targetNum = 4;\n    $('.task-num, [data-target]').text(targetNum);\n    const targetScore = targetNum * $('[data-item]').length;\n    let currentScore = 0;\n\n    // 計時器\n    let second = 30;\n    let timer = null;\n    let isStart = false;\n\n    // 計時開始\n    function startTimer() {\n        if (timer !== null) return; // 避免重複開始\n\n        isStart = true;\n        timer = setInterval(() => {\n            second--;\n            $('[data-second]').text(second);\n\n            if (second <= 0) endTimer();\n        }, 1000);\n    }\n\n    function endTimer() {\n        clearInterval(timer);\n        isStart = false;\n        timer = null;\n        // gameEnd();\n    }\n\n    // 創建遊戲舞台\n    const app = new PIXI.Application();\n    await app.init({\n        // width: 1170,\n        // height: 1624,\n        backgroundAlpha: 0,\n        resizeTo: document.querySelector('#canvas-container'),\n        resolution: window.devicePixelRatio || 1,\n        autoDensity: true,\n        antialias: true\n    });\n    document.querySelector('#canvas-container').appendChild(app.view);\n\n    // 新增物件\n    const createItem = async ({ x, y, width, height, imgName, hitArea }) => {\n        const name = imgName.split('-')[0];\n\n        const container = new PIXI.Container();\n        container.x = x + width * 0.5;\n        container.y = y + height * 0.5;\n        app.stage.addChild(container);\n\n        const itemTexture = await PIXI.Assets.load(`https://kunbu0203.github.io/19940922/assets/image/map${mapNum}/game/items/${imgName}.png`);\n        const item = new PIXI.Sprite(itemTexture);\n        item.anchor.set(0.5);\n        item.eventMode = 'static';\n        item.cursor = 'pointer';\n        if (hitArea !== undefined && hitArea.length > 0) {\n            const offsetX = width * -0.5;\n            const offsetY = height * -0.5;\n            const points = hitArea.map((val, i) => i % 2 === 0 ? val + offsetX : val + offsetY);\n            item.hitArea = new PIXI.Polygon(points);\n\n            // const hitShape = new PIXI.Graphics();\n            // hitShape.beginFill(0xff0000, 0.3); // 紅色、30% 透明度\n            // hitShape.drawPolygon(hitArea);\n            // hitShape.endFill();\n            // hitShape.x = offsetX;\n            // hitShape.y = offsetY;\n            // container.addChild(hitShape);\n        }\n        item.on('pointerdown', () => {\n            if (!isStart) return;\n            item.eventMode = 'none';\n\n            if (name !== 'coffee') {\n                score[name]++;\n                currentScore++;\n                // $(`[data-item=\"${name}\"]`).addClass('-active').find('[data-num]').text(score[name]);\n                $(`[data-item=\"${name}\"]`).find('[data-num]').text(score[name]);\n                addTl.play();\n            } else {\n                $('.game-stage').addClass('-coffee');\n            }\n\n            if (targetScore === currentScore) {\n                setTimeout(() => {\n                    endTimer();\n                }, 1000);\n            }\n            itemTl.play();\n        });\n\n        const originalTexture = await PIXI.Assets.load(`https://kunbu0203.github.io/19940922/assets/image/map${mapNum}/game/original/${imgName}.png`);\n        const original = new PIXI.Sprite(originalTexture);\n        original.anchor.set(0.5);\n        original.alpha = 0;\n\n        container.addChild(item);\n        container.addChild(original);\n\n        const addTl = gsap.timeline();\n        addTl.pause();\n        if (name !== 'coffee') {\n            const addTexture = await PIXI.Assets.load(`https://kunbu0203.github.io/19940922/assets/image/other/add.png`);\n            const add = new PIXI.Sprite(addTexture);\n            add.x = x + (width * 0.5) - 55;\n            add.y = y - 86;\n            add.alpha = 0;\n            addTl\n                .to(add, {\n                    alpha: 1,\n                    duration: 0.3\n                })\n                .to(add, {\n                    alpha: 0,\n                    duration: 0.3,\n                    delay: 0.3\n                });\n            app.stage.addChild(add);\n        }\n\n        // 物件點擊動畫\n        const itemTl = gsap.timeline();\n        itemTl.pause();\n        itemTl\n            .to(container.scale, {\n                x: 1.3,\n                y: 1.3,\n                duration: 0.5,\n                ease: 'back.out(4)'\n            })\n            .to(original, {\n                alpha: 1,\n                duration: 0.5\n            }, '<')\n            .to(container, {\n                alpha: 0,\n                duration: 0.3,\n                delay: 0.2\n            });\n    }\n    // 新增覆蓋葉子\n    const createLeaf = async ({ x, y, width, height, imgName }) => {\n        const leafTexture = await PIXI.Assets.load(`https://kunbu0203.github.io/19940922/assets/image/map${mapNum}/game/leaf/${imgName}.png`);\n        const leaf = new PIXI.Sprite(leafTexture);\n        leaf.anchor.set(1, 1);\n        leaf.x = x + width;\n        leaf.y = y + height;\n        leaf.eventMode = 'static';\n        leaf.on('pointerdown', () => {\n            leaf.eventMode = 'none';\n            leafTl.play();\n        });\n        app.stage.addChild(leaf);\n\n        // 葉子點擊動畫\n        const leafTl = gsap.timeline();\n        leafTl.pause();\n        leafTl\n            .to(leaf, {\n                y: y + height - 100,\n                rotation: 40 * (Math.PI / 180),\n                alpha: 0,\n                duration: 0.6\n            });\n    }\n\n    const data = {\n        items: {\n            redBean: [\n                {\n                    x: 221,\n                    y: 1427,\n                    width: 175,\n                    height: 86,\n                    leaf: {\n                        x: 268,\n                        y: 1369,\n                        width: 239,\n                        height: 157\n                    }\n                },\n                {\n                    x: 728,\n                    y: 1233,\n                    width: 72,\n                    height: 39,\n                    leaf: {\n                        x: 735,\n                        y: 1175,\n                        width: 97,\n                        height: 123\n                    }\n                },\n                {\n                    x: 921,\n                    y: 1419,\n                    width: 100,\n                    height: 48\n                },\n                {\n                    x: 0,\n                    y: 1260,\n                    width: 110,\n                    height: 54\n                }\n            ],\n            mulberryLeaf: [\n                {\n                    x: 924,\n                    y: 282,\n                    width: 136,\n                    height: 150\n                },\n                {\n                    x: 640,\n                    y: 873,\n                    width: 130,\n                    height: 95\n                },\n                {\n                    x: 72,\n                    y: 794,\n                    width: 108,\n                    height: 79\n                },\n                {\n                    x: 171,\n                    y: 143,\n                    width: 146,\n                    height: 118\n                }\n            ],\n            jobsTears: [\n                {\n                    x: 1006,\n                    y: 1359,\n                    width: 73,\n                    height: 46,\n                    leaf: {\n                        x: 987,\n                        y: 1279,\n                        width: 119,\n                        height: 78\n                    }\n                },\n                {\n                    x: 618,\n                    y: 1176,\n                    width: 61,\n                    height: 32\n                },\n                {\n                    x: 338,\n                    y: 1204,\n                    width: 92,\n                    height: 49,\n                    leaf: {\n                        x: 333,\n                        y: 1184,\n                        width: 119,\n                        height: 76\n                    }\n                },\n                {\n                    x: 680,\n                    y: 1349,\n                    width: 146,\n                    height: 78\n                }\n            ],\n            redDate: [\n                {\n                    x: 158,\n                    y: 540,\n                    width: 113,\n                    height: 97\n                },\n                {\n                    x: 980,\n                    y: 998,\n                    width: 113,\n                    height: 97,\n                    leaf: {\n                        x: 939,\n                        y: 969,\n                        width: 231,\n                        height: 211\n                    }\n                },\n                {\n                    x: 470,\n                    y: 758,\n                    width: 70,\n                    height: 72,\n                    leaf: {\n                        x: 466,\n                        y: 730,\n                        width: 106,\n                        height: 118\n                    }\n                },\n                {\n                    x: 704,\n                    y: 549,\n                    width: 99,\n                    height: 86,\n                    leaf: {\n                        x: 674,\n                        y: 533,\n                        width: 152,\n                        height: 133\n                    }\n                }\n            ],\n            blackBean: [\n                {\n                    x: 580,\n                    y: 1507,\n                    width: 149,\n                    height: 73\n                },\n                {\n                    x: 848,\n                    y: 1290,\n                    width: 105,\n                    height: 52,\n                    leaf: {\n                        x: 835,\n                        y: 1265,\n                        width: 136,\n                        height: 90\n                    }\n                },\n                {\n                    x: 70,\n                    y: 1478,\n                    width: 82,\n                    height: 40,\n                    leaf: {\n                        x: 7,\n                        y: 1394,\n                        width: 143,\n                        height: 182\n                    }\n                },\n                {\n                    x: 252,\n                    y: 1316,\n                    width: 88,\n                    height: 50\n                }\n            ]\n        },\n        coffee: {\n            x: 430,\n            y: 1280,\n            width: 180,\n            height: 91\n        }\n    };\n    // 物件定位資料\n    Object.entries(data.items).forEach(([key, value]) => {\n        // 取得隨機序列資料\n        const randomIndex = [1, 2, 3, 4]\n            .sort(() => Math.random() - 0.5)\n            .slice(0, targetNum)\n            .map(i => i - 1);\n\n        randomIndex\n            .map(i => value[i])\n            .forEach((item, i) => {\n                const { x, y, width, height, hitArea } = item;\n                const imgName = `${key}-${randomIndex[i] + 1}`;\n                createItem({ x, y, width, height, imgName, hitArea });\n\n                // 若有葉子覆蓋\n                if (item.leaf) {\n                    const { x, y, width, height } = item.leaf;\n                    createLeaf({ x, y, width, height, imgName });\n                }\n            });\n    });\n\n    // 新增陷阱咖啡豆\n    const { x, y, width, height } = data.coffee;\n    createItem({ x, y, width, height, imgName: 'coffee' });\n    // 若咖啡豆有葉子覆蓋\n    if (data.coffee.leaf) {\n        const { x, y, width, height } = data.coffee.leaf;\n        createLeaf({ x, y, width, height, imgName: 'coffee' });\n    }\n\n    window.addEventListener('resize', () => {\n        stageResize();\n    });\n    stageResize();\n    function stageResize() {\n        const canvasW = document.querySelector('#canvas-container').offsetWidth;\n        app.stage.scale.set(canvasW / 1170);\n    }\n\n    startTimer();\n})();\n"],"sourceRoot":"/"}